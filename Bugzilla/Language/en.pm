#!/usr/bin/perl
# Internationalisation messages for English Bugzilla

package Bugzilla::Language::en;

use strict;
use Bugzilla::Constants;

my $terms = {
    bug => 'bug',
    Bug => 'Bug',
    abug => 'a bug',
    Abug => 'A bug',
    aBug => 'a Bug',
    ABug => 'A Bug',
    bugs => 'bugs',
    Bugs => 'Bugs',
    zeroSearchResults => 'Zarro Boogs found',
    Bugzilla => 'Bugzilla',
};

$Bugzilla::messages->{en} = {
    terms => $terms,
    operator_descs => {
        not            => 'NOT',
        noop           => '---',
        equals         => 'is equal to',
        notequals      => 'is not equal to',
        anyexact       => 'is equal to any of the strings',
        substring      => 'contains the string',
        casesubstring  => 'contains the string (exact case)',
        notsubstring   => 'does not contain the string',
        anywordssubstr => 'contains any of the strings',
        allwordssubstr => 'contains all of the strings',
        nowordssubstr  => 'contains none of the strings',
        regexp         => 'matches regular expression',
        notregexp      => 'does not match regular expression',
        lessthan       => 'is less than',
        lessthaneq     => 'is less than or equal to',
        greaterthan    => 'is greater than',
        greaterthaneq  => 'is greater than or equal to',
        anywords       => 'contains any of the words',
        allwords       => 'contains all of the words',
        nowords        => 'contains none of the words',
        changedbefore  => 'changed before',
        changedafter   => 'changed after',
        changedfrom    => 'changed from',
        changedto      => 'changed to',
        changedby      => 'changed by',
        matches        => 'matches',
        notmatches     => 'does not match',
        insearch       => 'matched by saved search',
        notinsearch    => 'not matched by saved search',
    },
    field_types => {
        FIELD_TYPE_UNKNOWN()       => 'Unknown Type',
        FIELD_TYPE_FREETEXT()      => 'Free Text',
        FIELD_TYPE_SINGLE_SELECT() => 'Drop Down',
        FIELD_TYPE_MULTI_SELECT()  => 'Multiple-Selection Box',
        FIELD_TYPE_TEXTAREA()      => 'Large Text Box',
        FIELD_TYPE_DATETIME()      => 'Date/Time',
        FIELD_TYPE_BUG_ID()        => $terms->{Bug}.' ID',
        FIELD_TYPE_NUMERIC()       => 'Numeric',
    },
    field_descs => {
        actual_time               => 'Actual Hours',
        alias                     => 'Alias',
        assigned_to               => 'Assignee',
        blocked                   => 'Blocks',
        bug_file_loc              => 'URL',
        bug_group                 => 'Group',
        bug_id                    => $terms->{Bug}.' ID',
        bug_severity              => 'Severity',
        bug_status                => 'Status',
        cc                        => 'CC',
        classification            => 'Classification',
        cclist_accessible         => 'CC list accessible',
        commenter                 => 'Commenter',
        component_id              => 'Component ID',
        component                 => 'Component',
        content                   => 'Content',
        '[Bug creation]'          => 'Creation date',
        opendate                  => 'Creation date',
        creation_ts               => 'Creation date',
        deadline                  => 'Deadline',
        changeddate               => 'Changed',
        delta_ts                  => 'Changed',
        dependson                 => 'Depends on',
        dup_id                    => 'Duplicate',
        estimated_time            => 'Orig. Est.',
        everconfirmed             => 'Ever confirmed',
        keywords                  => 'Keywords',
        longdesc                  => 'Comment',
        newcc                     => 'CC',
        op_sys                    => 'OS',
        owner_idle_time           => 'Time Since Assignee Touched',
        percentage_complete       => '%Complete',
        priority                  => 'Priority',
        product_id                => 'Product ID',
        product                   => 'Product',
        qa_contact                => 'QA Contact',
        remaining_time            => 'Hours Left',
        rep_platform              => 'Hardware',
        reporter                  => 'Reporter',
        reporter_accessible       => 'Reporter accessible',
        resolution                => 'Resolution',
        see_also                  => 'See Also',
        setting                   => 'Setting',
        settings                  => 'Settings',
        short_desc                => 'Summary',
        status_whiteboard         => 'Whiteboard',
        target_milestone          => 'Target Milestone',
        version                   => 'Version',
        votes                     => 'Votes',
        work_time                 => 'Hours Worked',
        interval_time             => 'Period Worktime',
        comment0                  => 'First Comment',
        'longdescs.isprivate'     => 'Comment is private',
        'attach_data.thedata'     => 'Attachment data',
        'attachments.description' => 'Attachment description',
        'attachments.filename'    => 'Attachment filename',
        'attachments.mimetype'    => 'Attachment mime type',
        'attachments.ispatch'     => 'Attachment is patch',
        'attachments.isobsolete'  => 'Attachment is obsolete',
        'attachments.isprivate'   => 'Attachment is private',
        'attachments.isurl'       => 'Attachment is a URL',
        'attachments.submitter'   => 'Attachment creator',
        'flagtypes.name'          => 'Flags',
        'requestees.login_name'   => 'Flag Requestee',
        'setters.login_name'      => 'Flag Setter',
    },
};

__END__
#!/usr/bin/perl

package Bugzilla::Language::en;

use strict;
use Bugzilla::Constants;

my $terms = {
    bug => 'bug',
    Bug => 'Bug',
    abug => 'a bug',
    Abug => 'A bug',
    aBug => 'a Bug',
    ABug => 'A Bug',
    bugs => 'bugs',
    Bugs => 'Bugs',
    zeroSearchResults => 'Zarro Boogs found',
    Bugzilla => 'Bugzilla',
};

$Bugzilla::messages->{en} = {
    terms => $terms,
    operator_descs => {
        not            => 'NOT',
        noop           => '---',
        equals         => 'is equal to',
        notequals      => 'is not equal to',
        anyexact       => 'is equal to any of the strings',
        substring      => 'contains the string',
        casesubstring  => 'contains the string (exact case)',
        notsubstring   => 'does not contain the string',
        anywordssubstr => 'contains any of the strings',
        allwordssubstr => 'contains all of the strings',
        nowordssubstr  => 'contains none of the strings',
        regexp         => 'matches regular expression',
        notregexp      => 'does not match regular expression',
        lessthan       => 'is less than',
        lessthaneq     => 'is less than or equal to',
        greaterthan    => 'is greater than',
        greaterthaneq  => 'is greater than or equal to',
        anywords       => 'contains any of the words',
        allwords       => 'contains all of the words',
        nowords        => 'contains none of the words',
        changedbefore  => 'changed before',
        changedafter   => 'changed after',
        changedfrom    => 'changed from',
        changedto      => 'changed to',
        changedby      => 'changed by',
        matches        => 'matches',
        notmatches     => 'does not match',
        insearch       => 'matched by saved search',
        notinsearch    => 'not matched by saved search',
    },
    field_types => {
        FIELD_TYPE_UNKNOWN       => 'Unknown Type',
        FIELD_TYPE_FREETEXT      => 'Free Text',
        FIELD_TYPE_SINGLE_SELECT => 'Drop Down',
        FIELD_TYPE_MULTI_SELECT  => 'Multiple-Selection Box',
        FIELD_TYPE_TEXTAREA      => 'Large Text Box',
        FIELD_TYPE_DATETIME      => 'Date/Time',
        FIELD_TYPE_BUG_ID        => $terms->{Bug}.' ID',
        FIELD_TYPE_NUMERIC       => 'Numeric',
    },
    field_descs => {
        actual_time               => 'Actual Hours',
        alias                     => 'Alias',
        assigned_to               => 'Assignee',
        blocked                   => 'Blocks',
        bug_file_loc              => 'URL',
        bug_group                 => 'Group',
        bug_id                    => $terms->{Bug}.' ID',
        bug_severity              => 'Severity',
        bug_status                => 'Status',
        cc                        => 'CC',
        classification            => 'Classification',
        cclist_accessible         => 'CC list accessible',
        commenter                 => 'Commenter',
        component_id              => 'Component ID',
        component                 => 'Component',
        content                   => 'Content',
        '[Bug creation]'          => 'Creation date',
        opendate                  => 'Creation date',
        creation_ts               => 'Creation date',
        deadline                  => 'Deadline',
        changeddate               => 'Changed',
        delta_ts                  => 'Changed',
        dependson                 => 'Depends on',
        dup_id                    => 'Duplicate',
        estimated_time            => 'Orig. Est.',
        everconfirmed             => 'Ever confirmed',
        keywords                  => 'Keywords',
        longdesc                  => 'Comment',
        newcc                     => 'CC',
        op_sys                    => 'OS',
        owner_idle_time           => 'Time Since Assignee Touched',
        percentage_complete       => '%Complete',
        priority                  => 'Priority',
        product_id                => 'Product ID',
        product                   => 'Product',
        qa_contact                => 'QA Contact',
        remaining_time            => 'Hours Left',
        rep_platform              => 'Hardware',
        reporter                  => 'Reporter',
        reporter_accessible       => 'Reporter accessible',
        resolution                => 'Resolution',
        see_also                  => 'See Also',
        setting                   => 'Setting',
        settings                  => 'Settings',
        short_desc                => 'Summary',
        status_whiteboard         => 'Whiteboard',
        target_milestone          => 'Target Milestone',
        version                   => 'Version',
        votes                     => 'Votes',
        work_time                 => 'Hours Worked',
        interval_time             => 'Period Worktime',
        comment0                  => 'First Comment',
        'longdescs.isprivate'     => 'Comment is private',
        'attach_data.thedata'     => 'Attachment data',
        'attachments.description' => 'Attachment description',
        'attachments.filename'    => 'Attachment filename',
        'attachments.mimetype'    => 'Attachment mime type',
        'attachments.ispatch'     => 'Attachment is patch',
        'attachments.isobsolete'  => 'Attachment is obsolete',
        'attachments.isprivate'   => 'Attachment is private',
        'attachments.isurl'       => 'Attachment is a URL',
        'attachments.submitter'   => 'Attachment creator',
        'flagtypes.name'          => 'Flags',
        'requestees.login_name'   => 'Flag Requestee',
        'setters.login_name'      => 'Flag Setter',
    },
};

__END__
#!/usr/bin/perl
# Internationalisation messages for English Bugzilla

package Bugzilla::Language::en;

use strict;
use Bugzilla::Constants;

my $terms = {
    bug => 'bug',
    Bug => 'Bug',
    abug => 'a bug',
    Abug => 'A bug',
    aBug => 'a Bug',
    ABug => 'A Bug',
    bugs => 'bugs',
    Bugs => 'Bugs',
    zeroSearchResults => 'Zarro Boogs found',
    Bugzilla => 'Bugzilla',
};

$Bugzilla::messages->{en} = {
    terms => $terms,
    operator_descs => {
        not            => 'NOT',
        noop           => '---',
        equals         => 'is equal to',
        notequals      => 'is not equal to',
        anyexact       => 'is equal to any of the strings',
        substring      => 'contains the string',
        casesubstring  => 'contains the string (exact case)',
        notsubstring   => 'does not contain the string',
        anywordssubstr => 'contains any of the strings',
        allwordssubstr => 'contains all of the strings',
        nowordssubstr  => 'contains none of the strings',
        regexp         => 'matches regular expression',
        notregexp      => 'does not match regular expression',
        lessthan       => 'is less than',
        lessthaneq     => 'is less than or equal to',
        greaterthan    => 'is greater than',
        greaterthaneq  => 'is greater than or equal to',
        anywords       => 'contains any of the words',
        allwords       => 'contains all of the words',
        nowords        => 'contains none of the words',
        changedbefore  => 'changed before',
        changedafter   => 'changed after',
        changedfrom    => 'changed from',
        changedto      => 'changed to',
        changedby      => 'changed by',
        matches        => 'matches',
        notmatches     => 'does not match',
        insearch       => 'matched by saved search',
        notinsearch    => 'not matched by saved search',
    },
    field_types => {
        FIELD_TYPE_UNKNOWN()       => 'Unknown Type',
        FIELD_TYPE_FREETEXT()      => 'Free Text',
        FIELD_TYPE_SINGLE_SELECT() => 'Drop Down',
        FIELD_TYPE_MULTI_SELECT()  => 'Multiple-Selection Box',
        FIELD_TYPE_TEXTAREA()      => 'Large Text Box',
        FIELD_TYPE_DATETIME()      => 'Date/Time',
        FIELD_TYPE_BUG_ID()        => $terms->{Bug}.' ID',
        FIELD_TYPE_NUMERIC()       => 'Numeric',
    },
    field_descs => {
        actual_time               => 'Actual Hours',
        alias                     => 'Alias',
        assigned_to               => 'Assignee',
        blocked                   => 'Blocks',
        bug_file_loc              => 'URL',
        bug_group                 => 'Group',
        bug_id                    => $terms->{Bug}.' ID',
        bug_severity              => 'Severity',
        bug_status                => 'Status',
        cc                        => 'CC',
        classification            => 'Classification',
        cclist_accessible         => 'CC list accessible',
        commenter                 => 'Commenter',
        component_id              => 'Component ID',
        component                 => 'Component',
        content                   => 'Content',
        '[Bug creation]'          => 'Creation date',
        opendate                  => 'Creation date',
        creation_ts               => 'Creation date',
        deadline                  => 'Deadline',
        changeddate               => 'Changed',
        delta_ts                  => 'Changed',
        dependson                 => 'Depends on',
        dup_id                    => 'Duplicate',
        estimated_time            => 'Orig. Est.',
        everconfirmed             => 'Ever confirmed',
        keywords                  => 'Keywords',
        longdesc                  => 'Comment',
        newcc                     => 'CC',
        op_sys                    => 'OS',
        owner_idle_time           => 'Time Since Assignee Touched',
        percentage_complete       => '%Complete',
        priority                  => 'Priority',
        product_id                => 'Product ID',
        product                   => 'Product',
        qa_contact                => 'QA Contact',
        remaining_time            => 'Hours Left',
        rep_platform              => 'Hardware',
        reporter                  => 'Reporter',
        reporter_accessible       => 'Reporter accessible',
        resolution                => 'Resolution',
        see_also                  => 'See Also',
        setting                   => 'Setting',
        settings                  => 'Settings',
        short_desc                => 'Summary',
        status_whiteboard         => 'Whiteboard',
        target_milestone          => 'Target Milestone',
        version                   => 'Version',
        votes                     => 'Votes',
        work_time                 => 'Hours Worked',
        interval_time             => 'Period Worktime',
        comment0                  => 'First Comment',
        'longdescs.isprivate'     => 'Comment is private',
        'attach_data.thedata'     => 'Attachment data',
        'attachments.description' => 'Attachment description',
        'attachments.filename'    => 'Attachment filename',
        'attachments.mimetype'    => 'Attachment mime type',
        'attachments.ispatch'     => 'Attachment is patch',
        'attachments.isobsolete'  => 'Attachment is obsolete',
        'attachments.isprivate'   => 'Attachment is private',
        'attachments.isurl'       => 'Attachment is a URL',
        'attachments.submitter'   => 'Attachment creator',
        'flagtypes.name'          => 'Flags',
        'requestees.login_name'   => 'Flag Requestee',
        'setters.login_name'      => 'Flag Setter',
    },
};

__END__
