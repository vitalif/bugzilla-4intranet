[%# The contents of this file are subject to the Mozilla Public
  # License Version 1.1 (the "License"); you may not use this file
  # except in compliance with the License. You may obtain a copy of
  # the License at http://www.mozilla.org/MPL/
  #
  # Software distributed under the License is distributed on an "AS
  # IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
  # implied. See the License for the specific language governing
  # rights and limitations under the License.
  #
  # The Original Code is the Bugzilla Bug Tracking System.
  #
  # The Initial Developer of the Original Code is Netscape Communications
  # Corporation. Portions created by Netscape are
  # Copyright (C) 1998 Netscape Communications Corporation. All
  # Rights Reserved.
  #
  # Contributor(s): Myk Melez <myk@mozilla.org>
  #%]


<script type="text/javascript">
<!-- 
  // Enables or disables a requestee field depending on whether or not
  // the user is requesting the corresponding flag.
  function toggleRequesteeField(flagField, no_focus)
  {
    // Convert the ID of the flag field into the ID of its corresponding
    // requestee field and then use the ID to get the field.
    var id = flagField.name.replace(/flag(_type)?-(\d+)/, "requestee$1-$2");
    var requesteeField = document.getElementById(id);
    if (!requesteeField) return;

    // Enable or disable the requestee field based on the value
    // of the flag field.
    if (flagField.value == "?") {
      requesteeField.disabled = false;
      if (!no_focus) requesteeField.focus();
    } else {
      requesteeField.disabled = true;
    }
    // For combo-boxes
    var rcombosel = document.getElementById(id+'_s');
    if (rcombosel)
      rcombosel.disabled = requesteeField.disabled;
  }

  // Disables requestee fields when the window is loaded since they shouldn't
  // be enabled until the user requests that flag type.
  function disableRequesteeFields()
  {
    var inputElements = document.getElementsByTagName("input");
    var selectElements = document.getElementsByTagName("select");
    //You cannot update Node lists, so you must create an array to combine the NodeLists
    var allElements = [];
    for( var i=0; i < inputElements.length; i++ ) {
      allElements[allElements.length] = inputElements.item(i);
    }
    for( var i=0; i < selectElements.length; i++ ) { //Combine inputs with selects
      allElements[allElements.length] = selectElements.item(i);
    }
    var inputElement, id, flagField;
    for ( var i=0 ; i<allElements.length ; i++ )
    {
      inputElement = allElements[i];
      if (inputElement.name.search(/^requestee(_type)?-(\d+)$/) != -1)
      {
        // Convert the ID of the requestee field into the ID of its corresponding
        // flag field and then use the ID to get the field.
        id = inputElement.name.replace(/requestee(_type)?-(\d+)/, "flag$1-$2");
        flagField = document.getElementById(id);
        if (flagField && flagField.value != "?")
        {
          inputElement.disabled = true;
          // For combo-boxes
          inputElement = document.getElementById(inputElement.id+'_s');
          if (inputElement)
            inputElement.disabled = true;
        }
      }
    }
  }
  YAHOO.util.Event.addListener(window, "load", disableRequesteeFields);
// -->
</script>

[% IF user.id %]

[%# We list flags by looping twice over the flag types relevant for the bug.
  # In the first loop, we display existing flags and then, for active types,
  # we display UI for adding new flags.  In the second loop, we display UI 
  # for adding additional new flags for those types for which a flag already
  # exists but which are multiplicable (can have multiple flags of the type
  # on a single bug/attachment).
  #%]

[% DEFAULT flag_table_id = "flags" %]

<table id="[% flag_table_id | html %]" class="flag_table">
  [% UNLESS flag_no_header %]
    <tr>
      <th colspan="2">
        Flags:
      </th>
      [% IF any_flags_requesteeble %]
        <th>
          Requestee:
        </th>
      [% END %]
    </tr>
  [% END %]

  [%# Step 1: Display every flag type (except inactive types with no flags). %]
  [% FOREACH type = flag_types %]

    [%# Step 1: Display existing flag(s). %]
    [% FOREACH flag = type.flags %]
      <tr>
        <td>
          <a href="#[% flag.creation_date | timestamp %]">[% flag.setter.nick | html %]</a>:
          <label title="[% type.description | html %]" for="flag-[% flag.id %]" style="white-space: nowrap">[%- type.name | html -%]</label>
        </td>
        <td>
          <select id="flag-[% flag.id %]" name="flag-[% flag.id %]"
                  title="[% type.description | html %]"
                  onchange="toggleRequesteeField(this);"
                  class="flag_select">
            [% FOR st = flag.statuses %]
              <option value="[% st | html %]" [% "selected" IF flag.status == st %]>[% st | html %]</option>
            [% END %]
          </select>
        </td>
        [% IF any_flags_requesteeble %]
          <td>
            [% IF (type.is_active && type.is_requestable && type.is_requesteeble) || flag.requestee %]
              <span style="white-space: nowrap;">
                [% INCLUDE "global/userselect-combobox.html.tmpl"
                           name     => "requestee-$flag.id"
                           id       => "requestee-$flag.id"
                           value    => flag.requestee.login
                           emptyok  => 1
                           usemenuforusers  => flag.custom_list
                           custom_userlist  => flag.custom_list
                           allow_other_user => flag.allow_other
                %]
              </span>
            [% END %]
          </td>
        [% END %]
      </tr>
    [% END %]

    [%# Step 2: Display UI for setting flag. %]
    [% IF (!type.flags || type.flags.size == 0 || type.is_multiplicable) && type.is_active %]
      <tr>
        <td>
          [% IF type.flags && type.flags.size > 0 %]addl.[% END %]
          <label title="[% type.description | html %]" for="flag_type-[% type.id %]" style="white-space: nowrap">[%- type.name | html %]</label>
        </td>
        <td>
          <select id="flag_type-[% type.id %]" name="flag_type-[% type.id %]"
                  title="[% type.description FILTER html %]"
                  [% ' disabled="disabled"' UNLESS (type.is_requestable && user.can_request_flag(type)) || user.can_set_flag(type) %]
                  onchange="toggleRequesteeField(this);"
                  class="flag_select">
            <option value="X"></option>
            [% IF type.is_requestable && user.can_request_flag(type) %]
              <option value="?">?</option>
            [% END %]
            [% IF user.can_set_flag(type) %]
              <option value="+">+</option>
              <option value="-">-</option>
            [% END %]
          </select>
        </td>
        [% IF any_flags_requesteeble %]
          <td>
            [% IF type.is_requestable && type.is_requesteeble %]
              <span style="white-space: nowrap;">
                [% INCLUDE "global/userselect-combobox.html.tmpl"
                           name     => "requestee_type-$type.id"
                           id       => "requestee_type-$type.id"
                           value    => ""
                           emptyok          => !type.is_multiplicable
                           usemenuforusers  => type.custom_list
                           custom_userlist  => type.custom_list
                           allow_other_user => type.allow_other
                %]
              </span>
            [% END %]
          </td>
        [% END %]
      </tr>
    [% END %]

  [% END %]

</table>

[% ELSE %]
  [%# The user is logged out. Display flags as read-only. %]
  [% FOREACH type = flag_types %]
    [% FOREACH flag = type.flags %]
      [% flag.setter.nick FILTER html %]:
      [%+ type.name FILTER html FILTER no_break %][% flag.status %]
      [% IF flag.requestee %]
        ([% flag.requestee.nick FILTER html %])
      [% END %]<br>
    [% END %]
  [% END %]
[% END %]
