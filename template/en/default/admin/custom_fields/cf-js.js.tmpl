[%# This Source Code Form is subject to the terms of the Mozilla Public
  # License, v. 2.0. If a copy of the MPL was not distributed with this
  # file, You can obtain one at http://mozilla.org/MPL/2.0/.
  #
  # This Source Code Form is "Incompatible With Secondary Licenses", as
  # defined by the Mozilla Public License, v. 2.0.
  #%]

// Disable a checkbox based on the state of another one.
function toggleCheckbox(this_checkbox, other_checkbox_id) {
  var other_checkbox = document.getElementById(other_checkbox_id);
  other_checkbox.disabled = !this_checkbox.checked;
}

var select_values = new Array();
[% USE Bugzilla %]
[% FOREACH sel_field = Bugzilla.fields({ is_select => 1 }) %]
  select_values[[% sel_field.id FILTER js %]] = [
  [% FOREACH legal_value = sel_field.legal_values %]
    [[% legal_value.id FILTER js %], '[% legal_value.name FILTER js %]'][% ',' UNLESS loop.last %]
  [% END %]
];
[% END %]

function onChangeType(type_field) {
  var value_field = document.getElementById('value_field_id');
  if (type_field.value == [% constants.FIELD_TYPE_SINGLE_SELECT %]
      || type_field.value == [% constants.FIELD_TYPE_MULTI_SELECT %])
    value_field.disabled = false;
  else
    value_field.disabled = true;
  var u = type_field.value == [% constants.FIELD_TYPE_EXTURL %];
  document.getElementById('url_title').style.display = u ? '' : 'none';
  document.getElementById('url_field').style.display = u ? '' : 'none';
}

function onChangeVisibilityField() {
    var vis_field = document.getElementById('visibility_field_id');
    var vis_value = document.getElementById('visibility_values');

  vis_value.style.display = vis_label.style.display = vis_field.value ? '' : 'none';
  if (vis_field.value)
  {
    var values = select_values[vis_field.value];
    bz_populateSelectFromArray(vis_value, values);
  }
  else
    bz_clearOptions(vis_value);
}
