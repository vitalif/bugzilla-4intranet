[%# 1.0@bugzilla.org %]
[%# The contents of this file are subject to the Mozilla Public
  # License Version 1.1 (the "License"); you may not use this file
  # except in compliance with the License. You may obtain a copy of
  # the License at http://www.mozilla.org/MPL/
  #
  # Software distributed under the License is distributed on an "AS
  # IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
  # implied. See the License for the specific language governing
  # rights and limitations under the License.
  #
  # The Original Code is the Bugzilla Test Runner System.
  #
  # The Initial Developer of the Original Code is Maciej Maczynski.
  # Portions created by Maciej Maczynski are Copyright (C) 2001
  # Maciej Maczynski. All Rights Reserved.
  #
  # Contributor(s): Greg Hendricks <ghendricks@novell.com>
  #%]
  
[%# Taken from bugzilla search/form.html.tmpl %]
[% query_variants = [
  { id => "allwordssubstr", name => "contains all of the words/strings" },
  { id => "anywordssubstr", name => "contains any of the words/strings" },
  { id => "substring", name => "contains the string" },
  { id => "casesubstring", name => "contains the string (exact case)" },
  { id => "allwords", name => "contains all of the words" },
  { id => "anywords", name => "contains any of the words" },
  { id => "regexp", name => "matches the regexp" },
  { id => "notregexp", name => "doesn't match the regexp" } ] %]

[% email_variants  = [
  { id => "substring", name => "contains" },
  { id => "exact", name => "is" },
  { id => "regexp", name => "matches regexp" },
  { id => "notregexp", name => "doesn't match regexp" } ]  %]
  
[% tag_variants = [
  { id => "anyexact", name => "is tagged with" },
  { id => "notag", name => "is NOT tagged with" },
  { id => "allwordssubstr", name => "contains all of the words/strings" },
  { id => "anywordssubstr", name => "contains any of the words/strings" },
  { id => "substring", name => "contains the string" },
  { id => "casesubstring", name => "contains the string (exact case)" },
  { id => "regexp", name => "matches the regexp" },
  { id => "allwords", name => "contains all of the words" },
  { id => "anywords", name => "contains any of the words" },
  ] %]