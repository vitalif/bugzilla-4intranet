[%# This Source Code Form is subject to the terms of the Mozilla Public
  # License, v. 2.0. If a copy of the MPL was not distributed with this
  # file, You can obtain one at http://mozilla.org/MPL/2.0/.
  #
  # This Source Code Form is "Incompatible With Secondary Licenses", as
  # defined by the Mozilla Public License, v. 2.0.
  #%]

[% PROCESS bug/time.html.tmpl %]

<script src="[% 'js/comments.js' FILTER mtime %]" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the `comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
      [% IF user.settings.quote_replies.value == 'quoted_reply' %]
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);
      [% ELSIF user.settings.quote_replies.value == 'simple_reply' %]
        replytext = prefix;
      [% END %]

      [% IF user.is_insider %]
        if (document.getElementById('isprivate_' + real_id).checked) {
            document.getElementById('newcommentprivacy').checked = 'checked';
            updateCommentTagControl(document.getElementById('newcommentprivacy'), 'comment'); 
        }
      [% END %]

      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>

[% DEFAULT start_at = 0 mode = "show" %]
[% sort_order = user.settings.comment_sort_order.value %]
[% user_cache = template_cache.users %]

[%# NOTE: (start_at > 0) means we came here from a midair collision,
  #       in which case we don't care what the user's preference is.
 %]
[% IF (start_at > 0) %]
    [% sort_order = "oldest_to_newest" %]
[% END %]

[% PROCESS bug/time.html.tmpl %]

[% DEFAULT mode = "show" %]

[%# This auto-sizes the comments and positions the collapse/expand links to the right. %]
<table class="bz_comment_table" cellpadding="0" cellspacing="0"[% ' width="100%"' IF user.settings.comment_width.value == 'on' %]><tr>
<td>

[% PROCESS "bug/comment-preview-div.html.tmpl" %]

[% FOREACH comment = comments %]
  [% IF comment.count >= start_at %]
    [% PROCESS a_comment %]
  [% END %]
[% END %]

[% IF mode == "edit" && user.id
      && user.settings.comment_box_position.value == "before_comments" %]
  <div class="bz_add_comment">
    <a href="#" 
       onclick="return goto_add_comments();">
       Add Comment</a>
  </div>
[% END %]

[%# Note: this template is used in multiple places; if you use this hook,
  # make sure you are aware of this fact.
  #%]
[% Hook.process("aftercomments") %]

</td>
<td width="200">
  [% IF mode == "edit" %]
    <script type="text/javascript">
      addActionLinks([% json(comment_indexes(comments)) %]);
    </script>
    <ul class="bz_collapse_expand_comments">
      <li><a href="#" onclick="toggle_all_comments('collapse'); 
                               return false;">Collapse All Comments</a></li>
      <li><a href="#" onclick="toggle_all_comments('expand');
                               return false;">Expand All Comments</a></li>
      [% IF user.settings.comment_box_position.value == "after_comments" && user.id %]
        <li class="bz_add_comment"><a href="#" 
            onclick="return goto_add_comments('bug_status_bottom');">
            Add Comment</a></li>
      [% END %]                               
    </ul>
  [% END %]
</td>
</tr></table>

[%############################################################################%]
[%# Block for individual comments                                            #%]
[%############################################################################%]

[% BLOCK a_comment %]
  [% RETURN IF comment.is_private AND NOT (user.is_insider || user.id == comment.author.id) %]
  [% has_worktime = user.is_timetracker && (comment.work_time > 0 || comment.work_time < 0) %]
  [% wt_only = comment.type == constants.CMT_WORKTIME || comment.type == constants.CMT_BACKDATED_WORKTIME %]
  [% wt_all = user.settings.showhide_comments.value == 'all' %]
  [% wt_wt = user.settings.showhide_comments.value == 'worktime' %]
  [% wt_btn = !multiple && (wt_wt && has_worktime || wt_all) && (comment.who == user.id || user.in_group('worktimeadmin')) %]
  <div class="bz_comment
                [%- " bz_private" IF comment.is_private %]
                [%- " bz_comment_hilite" IF marks.$count %]
                [%- " bz_first_comment" IF comment.count == 0 %]">
      [% IF comment.count == 0 %]
        [% class_name = "bz_first_comment_head" %]
        [% comment_label = "Description" %]
      [% ELSE %]
        [% class_name = wt_only ? "bz_comment_wthead" : "bz_comment_head" %]
        [% comment_label = "Comment " _ comment.count %]
      [% END %]

      <div class="[% class_name %]">

        <span class="bz_comment_actions" id="comment_act_[% comment.id %]"></span>

        [% IF wt_btn %]
        <span class="bz_comment_actions">
          [% IF wt_only %]
          <img src="images/clock.gif" width="16" height="16"
              alt="Comment is marked as worktime-only. Click to mark it as normal, then click Save Changes"
            title="Comment is marked as worktime-only. Click to mark it as normal, then click Save Changes"
            style="cursor: pointer; vertical-align: middle"
            onclick="toggle_wtonly([% comment.id %],1,this)" />
          <input type="hidden" id="cmt_normal_[% comment.id %]" name="cmt_normal_[% comment.id %]" value="" />
          [% ELSIF comment.type == constants.CMT_NORMAL %]
          <img src="images/clockx.gif" width="16" height="16"
              alt="Comment is marked as normal. Click to mark it as worktime-only, then click Save Changes"
            title="Comment is marked as normal. Click to mark it as worktime-only, then click Save Changes"
            style="cursor: pointer; vertical-align: middle"
            onclick="toggle_wtonly([% comment.id %],0,this)" />
          <input type="hidden" id="cmt_worktime_[% comment.id %]" name="cmt_worktime_[% comment.id %]" value="" />
          [% END %]
        </span>
        [% END %]

        [% IF mode == "edit" && user.is_insider && bug.check_can_change_field('longdesc', 0, 1) %]
          <div class="bz_private_checkbox">
            <input type="hidden" value="1"
                   name="defined_isprivate_[% comment.id %]" />
            <input type="checkbox"
                   name="isprivate_[% comment.id %]" value="1"
                   id="isprivate_[% comment.id %]"
                   onClick="updateCommentPrivacy(this, [% comment.id %])"
                   [% " checked=\"checked\"" IF comment.is_private %] />
            <label for="isprivate_[% comment.id %]">Private</label>
          </div>
        [% END %]

        <a name="[% comment.bug_when FILTER timestamp %]"></a>
        [% IF NOT wt_only %]
        <span class="bz_comment_number">
          [% IF comment.author.id == user.id && collision != 1 %]
          [<a href="#" onclick="showEditComment([% comment.id %]); return false;">Edit Comment</a>]
          [% END %]
          <a name="c[% comment.count %]"
             href="show_bug.cgi?id=[% bug.bug_id %]#c[% comment.count %]">
            [%- comment_label FILTER html %]</a>
        </span>
        [% END %]

        <span class="bz_comment_user">
          [%# No need to recreate the exact same template if we already have it. %]
          [% commenter_id = comment.author.id %]
          [% UNLESS user_cache.$commenter_id %]
            [% user_cache.$commenter_id = BLOCK %]
              [% INCLUDE global/user.html.tmpl who = comment.author %]
            [% END %]
          [% END %]
          [% user_cache.$commenter_id FILTER none %]
        </span>

        <span class="bz_comment_user_images">
          [% FOREACH group = comment.author.groups_with_icon %]
            <img src="[% group.icon_url FILTER html %]"
                 alt="[% group.name FILTER html %]"
                 title="[% group.name FILTER html %] - [% group.description FILTER html %]">
          [% END %]
        </span>

        <span class="bz_comment_time">
          [%+ comment.creation_ts FILTER time %]
        </span>

        [% IF wt_only && has_worktime %]
        <div class="bz_comment_worktime">
          [% PROCESS formattimeunit time_unit=comment.work_time %]h
        </div>
        [% END %]

        <div style="clear: both"></div>
      </div>

      [% IF !wt_only && has_worktime %]
        <br />
        Additional hours worked:
        [%+ PROCESS formattimeunit time_unit=comment.work_time %]
      [% END %]

[%# Don't indent the <pre> block, since then the spaces are displayed in the
  # generated HTML
  #%]
<div class="bz_comment_text[% " collapsed" IF wt_only %][% " bz_fullscreen_comment" IF user.settings.comment_width.value == 'on' %]" id="comment_text_[% comment.id %]">
  [%- comment.body_full({ wrap => 1 }) -%]
</div>
    </div>
[% END %]
